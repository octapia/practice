{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practice\\\\React JS Project\\\\chat-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport RoomList from './Components/RoomList';\nimport MessageList from './Components/MessageList';\nimport NewRoomForm from './Components/NewRoomForm';\nimport SendMessageForm from './Components/SendMessageForm';\nimport Talk from \"talkjs\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.talkjsContainer = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: parseInt(Math.random() * 500000).toString(),\n        name: \"Alice\",\n        email: \"demo@talkjs.com\",\n        photoUrl: \"https://demo.talkjs.com/img/alice.jpg\",\n        welcomeMessage: \"Hey there! How are you? :-)\",\n        role: \"booker\"\n      });\n      this.talkSession = new Talk.Session({\n        appId: \"tzMh5IB8\",\n        me: me\n      });\n      var other = new Talk.User({\n        id: parseInt(Math.random() * 500000).toString(),\n        name: \"Sebastian\",\n        email: \"demo@talkjs.com\",\n        photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n        welcomeMessage: \"Hey, how can I help?\",\n        role: \"booker\"\n      });\n      var conversation = talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      var inbox = talkSession.createInbox({\n        selected: conversation\n      });\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.talkjsContainer,\n        className: \"chatbox-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(RoomList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewRoomForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SendMessageForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/practice/React JS Project/chat-app/src/App.js"],"names":["React","Component","RoomList","MessageList","NewRoomForm","SendMessageForm","Talk","App","constructor","props","state","talkjsContainer","createRef","componentDidMount","ready","then","me","User","id","parseInt","Math","random","toString","name","email","photoUrl","welcomeMessage","role","talkSession","Session","appId","other","conversation","getOrCreateConversation","oneOnOneId","setParticipant","inbox","createInbox","selected","mount","current","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAIA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAuCnBC,KAvCmB,GAuCX,EAvCW;AAEjB,SAAKC,eAAL,gBAAuBX,KAAK,CAACY,SAAN,EAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAgB,MAAM;AACpB,UAAIC,EAAE,GAAG,IAAIV,IAAI,CAACW,IAAT,CAAc;AACrBC,QAAAA,EAAE,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAc,MAAf,CAAR,CAA+BC,QAA/B,EADiB;AAErBC,QAAAA,IAAI,EAAE,OAFe;AAGrBC,QAAAA,KAAK,EAAE,iBAHc;AAIrBC,QAAAA,QAAQ,EAAE,uCAJW;AAKrBC,QAAAA,cAAc,EAAE,6BALK;AAMrBC,QAAAA,IAAI,EAAE;AANe,OAAd,CAAT;AASA,WAAKC,WAAL,GAAmB,IAAItB,IAAI,CAACuB,OAAT,CAAiB;AAClCC,QAAAA,KAAK,EAAE,UAD2B;AAElCd,QAAAA,EAAE,EAAEA;AAF8B,OAAjB,CAAnB;AAKA,UAAIe,KAAK,GAAG,IAAIzB,IAAI,CAACW,IAAT,CAAc;AACxBC,QAAAA,EAAE,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAc,MAAf,CAAR,CAA+BC,QAA/B,EADoB;AAExBC,QAAAA,IAAI,EAAE,WAFkB;AAGxBC,QAAAA,KAAK,EAAE,iBAHiB;AAIxBC,QAAAA,QAAQ,EAAE,2CAJc;AAKxBC,QAAAA,cAAc,EAAE,sBALQ;AAMxBC,QAAAA,IAAI,EAAE;AANkB,OAAd,CAAZ;AASA,UAAIK,YAAY,GAAGJ,WAAW,CAACK,uBAAZ,CAAoC3B,IAAI,CAAC4B,UAAL,CAAgBlB,EAAhB,EAAoBe,KAApB,CAApC,CAAnB;AACAC,MAAAA,YAAY,CAACG,cAAb,CAA4BnB,EAA5B;AACAgB,MAAAA,YAAY,CAACG,cAAb,CAA4BJ,KAA5B;AAEA,UAAIK,KAAK,GAAGR,WAAW,CAACS,WAAZ,CAAwB;AAACC,QAAAA,QAAQ,EAAEN;AAAX,OAAxB,CAAZ;AACAI,MAAAA,KAAK,CAACG,KAAN,CAAY,KAAK5B,eAAL,CAAqB6B,OAAjC;AACD,KA9BD;AA+BD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAE,KAAK9B,eAAf;AAAgC,QAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADP;AASD;;AAnDyB;;AAuD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport RoomList from './Components/RoomList';\nimport MessageList from './Components/MessageList';\nimport NewRoomForm from './Components/NewRoomForm';\nimport SendMessageForm from './Components/SendMessageForm';\n\nimport Talk from \"talkjs\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.talkjsContainer = React.createRef();\n  }\n\n  componentDidMount() {    \n    Talk.ready.then(() => {\n      var me = new Talk.User({\n        id: parseInt(Math.random()*500000).toString(),\n        name: \"Alice\",\n        email: \"demo@talkjs.com\",\n        photoUrl: \"https://demo.talkjs.com/img/alice.jpg\",\n        welcomeMessage: \"Hey there! How are you? :-)\",\n        role: \"booker\"\n      });\n      \n      this.talkSession = new Talk.Session({\n        appId: \"tzMh5IB8\",\n        me: me\n      });\n      \n      var other = new Talk.User({\n        id: parseInt(Math.random()*500000).toString(),\n        name: \"Sebastian\",\n        email: \"demo@talkjs.com\",\n        photoUrl: \"https://demo.talkjs.com/img/sebastian.jpg\",\n        welcomeMessage: \"Hey, how can I help?\",\n        role: \"booker\"\n      });\n\n      var conversation = talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n      conversation.setParticipant(me);\n      conversation.setParticipant(other);\n      \n      var inbox = talkSession.createInbox({selected: conversation});\n      inbox.mount(this.talkjsContainer.current);\n    });\n  }\n\n  state = {  }\n  render() { \n    return ( \n           <div className=\"app\">\n             <div ref={this.talkjsContainer} className=\"chatbox-container\"></div>\n             <RoomList />\n            <MessageList/>\n            <NewRoomForm />\n            <SendMessageForm /> \n            </div> \n           )\n  }\n}\n \n\nexport default App;"]},"metadata":{},"sourceType":"module"}