{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practice\\\\React JS Project\\\\Mini Project\\\\src\\\\Components\\\\Demo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Demo.css\";\nimport { useFormik } from \"formik\";\nconst initialValues = {\n  name: \"Tahid\",\n  email: \"\",\n  channel: \"\"\n};\n\nconst onSubmit = values => console.log(\"Form Data : \", values);\n\nconst validate = values => {\n  let error = {};\n\n  if (!values.name) {\n    error.name = \"Required !\";\n  }\n\n  if (!values.email) {\n    error.email = \"Required !\";\n  } else if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)) {\n    error.email = \"Invalid Email !\";\n  }\n\n  if (!values.channel) {\n    error.channel = \"Required !\";\n  }\n\n  return error;\n};\n\nexport default function YoutubeForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [\"1\", /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = YoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/practice/React JS Project/Mini Project/src/Components/Demo.js"],"names":["React","useFormik","initialValues","name","email","channel","onSubmit","values","console","log","validate","error","test","YoutubeForm","formik","errors","handleSubmit","handleChange","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Demo.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst initialValues = {\r\n  name: \"Tahid\",\r\n  email: \"\",\r\n  channel: \"\",\r\n};\r\nconst onSubmit = (values) => console.log(\"Form Data : \", values);\r\n\r\nconst validate = (values) => {\r\n  let error = {};\r\n  if (!values.name) {\r\n    error.name = \"Required !\";\r\n  }\r\n  if (!values.email) {\r\n    error.email = \"Required !\";\r\n  } else if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)) {\r\n    error.email = \"Invalid Email !\";\r\n  }\r\n  if (!values.channel) {\r\n    error.channel = \"Required !\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport default function YoutubeForm() {\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate,\r\n  });\r\n\r\n  console.log(formik.errors);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">Name : </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          />\r\n          {formik.value.name ? (\r\n            <div className=\"error\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">1\r\n          <label htmlFor=\"email\">Email : </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          />\r\n          {formik.value.name ? (\r\n            <div className=\"error\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"channel\">Channel : </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"channel\"\r\n            name=\"channel\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.channel}\r\n          />\r\n          {formik.value.name ? (\r\n            <div className=\"error\">{formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}