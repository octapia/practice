{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practice\\\\React JS Project\\\\Mini Project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nexport default function App() {\n  _s();\n\n  const [count, setCount] = useState({\n    volume: 20,\n    bass: 20,\n    mid: 20,\n    treble: 20\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      count: count.volume,\n      setCount: setCount.v,\n      name: \"volume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      count: count.bass,\n      setCount: setCount,\n      name: \"bass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      count: count.mid,\n      setCount: setCount,\n      name: \"mid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      count: count.treble,\n      setCount: setCount,\n      name: \"treble\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"4TWjGzzZcj4ekJzTVQCfeMcy1OY=\");\n\n_c = App;\n\nconst Up = ({\n  count,\n  setCount\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => setCount(count + 1),\n  children: \"+\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 34\n}, this);\n\n_c2 = Up;\n\nconst Down = ({\n  count,\n  setCount\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: () => setCount(count - 1),\n  children: \"-\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 36\n}, this);\n\n_c3 = Down;\n\nconst Row = ({\n  count,\n  setCount,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Up, {\n      setCount: setCount,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ele\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ele\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Down, {\n      setCount: setCount,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n\n_c4 = Row;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Up\");\n$RefreshReg$(_c3, \"Down\");\n$RefreshReg$(_c4, \"Row\");","map":{"version":3,"sources":["C:/Users/User/Desktop/practice/React JS Project/Mini Project/src/App.js"],"names":["React","useState","App","count","setCount","volume","bass","mid","treble","v","Up","Down","Row","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAACI,IAAAA,MAAM,EAAE,EAAT;AACCC,IAAAA,IAAI,EAAE,EADP;AAECC,IAAAA,GAAG,EAAE,EAFN;AAGCC,IAAAA,MAAM,EAAE;AAHT,GAAD,CAAlC;AAOI,sBACI;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEL,KAAK,CAACE,MAAlB;AAA0B,MAAA,QAAQ,EAAED,QAAQ,CAACK,CAA7C;AAAgD,MAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEN,KAAK,CAACG,IAAlB;AAAwB,MAAA,QAAQ,EAAEF,QAAlC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAED,KAAK,CAACI,GAAlB;AAAuB,MAAA,QAAQ,EAAEH,QAAjC;AAA2C,MAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,GAAD;AAAK,MAAA,KAAK,EAAED,KAAK,CAACK,MAAlB;AAA0B,MAAA,QAAQ,EAAEJ,QAApC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH;;GAhBuBF,G;;KAAAA,G;;AAmBxB,MAAMQ,EAAE,GAAG,CAAC;AAACP,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,kBAAsB;AAAQ,EAAA,OAAO,EAAE,MAAIA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC;;MAAMO,E;;AACN,MAAMC,IAAI,GAAG,CAAC;AAACR,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAD,kBAAsB;AAAQ,EAAA,OAAO,EAAE,MAAIA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC;;MAAMQ,I;;AAEN,MAAMC,GAAG,GAAG,CAAC;AAACT,EAAAA,KAAD;AAAOC,EAAAA,QAAP;AAAgBS,EAAAA;AAAhB,CAAD,KAA2B;AACpC,sBAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACF,QAAC,EAAD;AAAI,MAAA,QAAQ,EAAET,QAAd;AAAwB,MAAA,KAAK,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsBU;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,eAMF,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAET,QAAhB;AAA0B,MAAA,KAAK,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,YANE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQF,CATD;;MAAMS,G","sourcesContent":["import React,{useState} from 'react'\nimport './App.css'\nexport default function App() {\nconst [count, setCount] = useState({volume: 20,\n                                    bass: 20,\n                                    mid: 20,\n                                    treble: 20\n                                    })\n\n                            \n    return (\n        <>\n            <Row count={count.volume} setCount={setCount.v} name=\"volume\"/>\n            <Row count={count.bass} setCount={setCount} name=\"bass\"/>\n            <Row count={count.mid} setCount={setCount} name=\"mid\"/>\n            <Row count={count.treble} setCount={setCount} name=\"treble\"/>\n        </>\n    )\n}\n\n    \nconst Up = ({count,setCount}) => <button onClick={()=>setCount(count+1)}>+</button>\nconst Down = ({count,setCount}) => <button onClick={()=>setCount(count-1)}>-</button>\n\nconst Row = ({count,setCount,name}) => {\n   return <div className=\"main\">\n        <Up setCount={setCount} count={count}/>\n        <div className=\"cont\">\n            <div className=\"ele\">{count}</div>\n            <div className=\"ele\">{name}</div>\n        </div>\n        <Down setCount={setCount} count={count}/>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}