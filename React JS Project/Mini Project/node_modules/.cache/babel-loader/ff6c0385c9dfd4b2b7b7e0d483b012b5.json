{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practice\\\\React JS Project\\\\Mini Project\\\\src\\\\Components\\\\Demo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Demo.css\";\nimport { useFormik } from \"formik\";\nconst initialValues = {\n  name: \"Tahid\",\n  email: \"\",\n  channel: \"\"\n};\n\nconst onSubmit = values => console.log(\"Form Data : \", values);\n\nconst validate = values => {\n  let error = {};\n\n  if (!values.name) {\n    error.name = \"Required !\";\n  }\n\n  if (!values.email) {\n    error.email = \"Required !\";\n  } else if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)) {\n    error.email = 'Invalid Email !';\n  }\n\n  if (!values.channel) {\n    error.channel = \"Required !\";\n  }\n\n  return error;\n};\n\nexport default function YoutubeForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [\".form-cont\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel\",\n        children: \"Channel : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel\",\n        name: \"channel\",\n        onChange: formik.handleChange,\n        value: formik.values.channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), formik.value.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = YoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/practice/React JS Project/Mini Project/src/Components/Demo.js"],"names":["React","useFormik","initialValues","name","email","channel","onSubmit","values","console","log","validate","error","test","YoutubeForm","formik","errors","handleSubmit","handleChange","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Demo.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst initialValues = {\r\n    name: \"Tahid\",\r\n    email: \"\",\r\n    channel: \"\",\r\n  };\r\nconst onSubmit = (values) => console.log(\"Form Data : \", values)\r\n\r\nconst validate = values => {\r\n    let error = {};\r\n    if(!values.name){\r\n        error.name = \"Required !\"\r\n    }\r\n    if(!values.email){\r\n        error.email = \"Required !\"\r\n    }else if(!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)){\r\n        error.email = 'Invalid Email !'\r\n    }\r\n    if(!values.channel){\r\n        error.channel = \"Required !\"\r\n    }\r\n    return error\r\n}\r\n\r\nexport default function YoutubeForm() {\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate\r\n});\r\n\r\nconsole.log(formik.errors)\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n          .form-cont\r\n        <label htmlFor=\"name\">Name : </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.name}\r\n        />\r\n        {formik.value.name? <div className=\"error\">{formik.errors.name}</div>:null}\r\n\r\n        <label htmlFor=\"email\">Email : </label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.value.name? <div className=\"error\">{formik.errors.name}</div> :null}\r\n\r\n        <label htmlFor=\"channel\">Channel : </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"channel\"\r\n          name=\"channel\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.channel}\r\n        />\r\n        {formik.value.name? <div className=\"error\">{formik.errors.name}</div>:null}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}