{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\practice\\\\React JS Project\\\\Mini Project\\\\src\\\\Components\\\\Demo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Demo.css\";\nimport { For } from \"formik\";\nconst initialValues = {\n  name: \"Tahid\",\n  email: \"\",\n  channel: \"\"\n};\n\nconst onSubmit = values => console.log(\"Form Data : \", values);\n\nconst validate = values => {\n  let error = {};\n  if (!values.name) error.name = \"Required !\";\n\n  if (!values.email) {\n    error.email = \"Required !\";\n  } else if (!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)) {\n    error.email = \"Invalid Email !\";\n  }\n\n  if (!values.channel) {\n    error.channel = \"Required !\";\n  }\n\n  return error;\n};\n\nexport default function YoutubeForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  console.log(formik.touched);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          ...formik.getFieldProps('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-exclamation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this), \" \", formik.errors.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          ...formik.getFieldProps('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-exclamation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this), \" \", formik.errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          ...formik.getFieldProps('channel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), formik.touched.channel && formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-exclamation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 36\n          }, this), \" \", formik.errors.channel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", true);\n\n_c = YoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/practice/React JS Project/Mini Project/src/Components/Demo.js"],"names":["React","For","initialValues","name","email","channel","onSubmit","values","console","log","validate","error","test","YoutubeForm","formik","useFormik","touched","handleSubmit","getFieldProps","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Demo.css\";\r\nimport { For } from \"formik\";\r\n\r\nconst initialValues = {\r\n  name: \"Tahid\",\r\n  email: \"\",\r\n  channel: \"\",\r\n};\r\nconst onSubmit = (values) => console.log(\"Form Data : \", values);\r\n\r\nconst validate = (values) => {\r\n  let error = {};\r\n  if (!values.name) error.name = \"Required !\";\r\n  if (!values.email) {\r\n    error.email = \"Required !\";\r\n  } else if (!/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i.test(values.email)) {\r\n    error.email = \"Invalid Email !\";\r\n  }\r\n  if (!values.channel) {\r\n    error.channel = \"Required !\";\r\n  }\r\n  return error;\r\n};\r\n\r\nexport default function YoutubeForm() {\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate,\r\n  });\r\nconsole.log(formik.touched)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"name\">Name : </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            {...formik.getFieldProps('name')}\r\n          />\r\n          {formik.touched.name && formik.errors.name ? (\r\n            <div className=\"error\"><i className=\"fa fa-exclamation\"></i> {formik.errors.name}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">Email : </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            {...formik.getFieldProps('email')}\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"error\"><i className=\"fa fa-exclamation\"></i> {formik.errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"channel\">Channel : </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"channel\"\r\n            name=\"channel\"\r\n            {...formik.getFieldProps('channel')}\r\n          />\r\n          {formik.touched.channel && formik.errors.channel ? (\r\n            <div className=\"error\"><i className=\"fa fa-exclamation\"></i> {formik.errors.channel}</div>\r\n          ) : null}\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}